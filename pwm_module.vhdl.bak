-- Auto generated

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

ENTITY pwm_module IS
  PORT (
    clock :	in		std_logic;
	 pwm_f	:	in		std_logic_vector(7 DOWNTO 0);
	 pwm_dc	:	in		std_logic_vector(7 DOWNTO 0);
	 pwm_out :	out	std_logic
  );
END pwm_module;

ARCHITECTURE behavior OF pwm_module IS
SIGNAL pwm_f_upscl : std_logic_vector(9 DOWNTO 0);
SIGNAL counter : std_logic_vector(7 DOWNTO 0);
SIGNAL ps_counter : std_logic_vector(9 DOWNTO 0);
SIGNAL ps_clock : std_logic;
BEGIN
	pwm_f_upscl <= pwm_f(7 DOWNTO 0) & "00";
	PROCESS(clock)
	BEGIN
		IF clock'event and clock = '1' THEN
			IF ps_counter = pwm_f_upscl THEN
				ps_counter <= "0000000000";
				ps_clock <= '1';
			ELSE
				ps_counter <= std_logic_vector(unsigned(ps_counter) + 1);
				ps_clock <= '0';
			END IF;
		END IF;
	END PROCESS;
	PROCESS(ps_clock)
	BEGIN
		IF ps_clock'event and ps_clock = '1' THEN
			counter <= std_logic_vector(unsigned(counter) + 1);
		ELSE
			counter <= counter;
		END IF;
	END PROCESS;
	PROCESS(counter)
	BEGIN
		IF unsigned(counter) < unsigned(pwm_dc) THEN
			pwm_out <= '1';
		ELSE 
			pwm_out <= '0';
		END IF;
	END PROCESS;
END behavior;