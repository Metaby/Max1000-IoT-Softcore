<?xml version="1.0" encoding="UTF-8" ?>
<architecture wordSize="8">
	<!-- REGISTER -->
	<register>
		<id>pc_register</id>
		<size>8</size>
		<inputs>
			<input>m1_multiplexer.out</input>
		</inputs>
		<output>system.out.pmem_adr</output>
		<control>system.auto</control>
	</register>
	<register>
		<id>mpc_register</id>
		<size>16</size>
		<inputs>
			<input>m2_multiplexer.out</input>
		</inputs>
		<output>system.out.mpmem_adr</output>
		<control>system.auto</control>
	</register>
	<register>
		<id>operand1_register</id>
		<size>8</size>
		<inputs>
			<input>cache_register_file.out</input>
		</inputs>
		<output>operand1_register.out</output>
		<control>system.auto</control>
	</register>
	<register>
		<id>operand2_register</id>
		<size>8</size>
		<inputs>
			<input>cache_register_file.out</input>
			<input>system.const.0</input>
			<input>system.const.1</input>
			<input>math_alu.low</input>
			<input>math_alu.high</input>
		</inputs>
		<output>operand2_register.out</output>
		<control>system.auto</control>
	</register>
	<register>
		<id>address_register</id>
		<size>8</size>
		<inputs>
			<input>system.in.pmem_dat</input>
		</inputs>
		<output>address_register.out</output>
		<control>system.auto</control>
	</register>
	<register>
		<id>alu_status_register</id>
		<size>1</size>
		<inputs>
			<input>math_alu.status</input>
			<input>system.const.0</input>
			<input>system.const.1</input>
		</inputs>
		<output>alu_status_register.out</output>
		<control>system.auto</control>
	</register>
	<register>
		<id>alu_carry_register</id>
		<size>1</size>
		<inputs>
			<input>math_alu.status</input>
			<input>system.const.0</input>
			<input>system.const.1</input>
		</inputs>
		<output>alu_carry_register.out</output>
		<control>system.auto</control>
	</register>
	<!-- ROM -->
	<rom>
		<id>cmd_trans_rom</id>
		<wordSize>16</wordSize>
		<addressSize>8</addressSize>
		<contentFile>translation.hex</contentFile>
		<addresses>
			<address>system.in.pmem_dat</address>
		</addresses>
		<output>cmd_trans_rom.out</output>
		<control>system.auto</control>
	</rom>
	<!-- REGISTER-FILE -->
	<registerFile>
		<id>cache_register_file</id>
		<wordSize>8</wordSize>
		<addressSize>5</addressSize>
		<ports>
			<port>
				<type>in</type>
				<addresses>
					<address>address_register.out[0,4]</address>
				</addresses>
				<inputs>
					<input>system.const.0</input>
					<input>system.in.pmem_dat</input>
					<input>math_alu.low</input>
					<input>math_alu.high</input>
				</inputs>
			</port>
			<port>
				<type>in</type>
				<addresses>
					<address>system.const.20</address>
				</addresses>
				<inputs>
					<input>system.in.mmi</input>
				</inputs>
			</port>
			<port>
				<type>out</type>
				<addresses>
					<address>address_register.out[0,4]</address>
				</addresses>
				<output>cache_register_file.out</output>
			</port>
			<port>
				<type>out</type>
				<addresses>
					<address>system.const.31</address>
				</addresses>
				<output>system.out.leds</output>
			</port>
			<port>
				<type>out</type>
				<addresses>
					<address>system.const.30</address>
				</addresses>
				<output>system.out.uart_out</output>
			</port>
			<port>
				<type>out</type>
				<addresses>
					<address>system.const.29</address>
				</addresses>
				<output>system.out.per_ctrl</output>
			</port>
			<port>
				<type>out</type>
				<addresses>
					<address>system.const.28</address>
				</addresses>
				<output>system.out.pwm0_dc</output>
			</port>
			<port>
				<type>out</type>
				<addresses>
					<address>system.const.27</address>
				</addresses>
				<output>system.out.pwm1_dc</output>
			</port>
		</ports>
		<control>system.auto</control>
	</registerFile>
	<!-- ALU -->
	<alu>
		<id>pc_inc_alu</id>
		<wordSize>8</wordSize>
		<inputsOperandA>
			<input>system.out.pmem_adr</input>
		</inputsOperandA>
		<inputsOperandB>
			<input>system.const.1</input>
		</inputsOperandB>
		<output1>pc_inc_alu.out</output1>
		<output2>system.open</output2>
		<operations>
			<operation>add_u</operation>
		</operations>
		<control>system.auto</control>
		<status>system.open</status>
	</alu>
	<alu>
		<id>mpc_inc_alu</id>
		<wordSize>16</wordSize>
		<inputsOperandA>
			<input>system.out.mpmem_adr</input>
		</inputsOperandA>
		<inputsOperandB>
			<input>system.const.1</input>
		</inputsOperandB>
		<output1>mpc_inc_alu.out</output1>
		<output2>system.open</output2>
		<operations>
			<operation>add_u</operation>
		</operations>
		<control>system.auto</control>
		<status>system.open</status>
	</alu>
	<alu>
		<id>math_alu</id>
		<wordSize>8</wordSize>
		<inputsOperandA>
			<input>operand1_register.out</input>
		</inputsOperandA>
		<inputsOperandB>
			<input>operand2_register.out</input>
		</inputsOperandB>
		<output1>math_alu.low</output1>
		<output2>math_alu.high</output2>
		<operations>
			<operation>add_u</operation>
			<operation>sub_u</operation>
			<operation>mul_u</operation>
			<operation>div_u</operation>
			<operation>add</operation>
			<operation>sub</operation>
			<operation>mul</operation>
			<operation>div</operation>
			<operation>rr</operation>
			<operation>rl</operation>
			<operation>srl</operation>
			<operation>sll</operation>
			<operation>sra</operation>
			<operation>and</operation>
			<operation>or</operation>
			<operation>xor</operation>
			<operation>not</operation>
		</operations>
		<conditions>
			<condition>gt_u</condition>
			<condition>lt_u</condition>
			<condition>geq_u</condition>
			<condition>leq_u</condition>		
			<condition>gt</condition>
			<condition>lt</condition>
			<condition>geq</condition>
			<condition>leq</condition>
			<condition>eq</condition>
		</conditions>
		<control>system.auto</control>
		<status>math_alu.status</status>
	</alu>
	<!-- MULTIPLEXER -->
	<multiplexer>
		<id>m1_multiplexer</id>
		<wordSize>8</wordSize>
		<inputs>
			<input>pc_inc_alu.out</input>
			<input>system.in.pmem_dat</input>
		</inputs>
		<control>alu_status_register.out</control>
		<output>m1_multiplexer.out</output>
	</multiplexer>
	<multiplexer>
		<id>m2_multiplexer</id>
		<wordSize>16</wordSize>
		<inputs>
			<input>mpc_inc_alu.out</input>
			<input>cmd_trans_rom.out</input>
		</inputs>
		<control>system.auto</control>
		<output>m2_multiplexer.out</output>
	</multiplexer>
	<multiplexer>
		<id>mc_in_multiplexer</id>
		<wordSize>-1</wordSize>
		<inputs>
			<input>system.in.mpmem_dat</input>
		</inputs>
		<output>system.control</output>
		<control>system.const.1</control>
	</multiplexer>
</architecture>